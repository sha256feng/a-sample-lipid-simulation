* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v2.0 on Apr, 25. 2020. JOBID=8782976348
* DIHEDRAL RESTRAINT POTENTIALS FOR LIPID BILAYER
*

open write card unit 55 name openmm/restraints/dihe.txt

calc NLipid = @nliptop + @nlipbot

calc nmemb = @NLipid

define STEROL sele ( resn CHL1 .or. resn ERG .or. resn SITO .or. resn STIG .or. resn CHSD -
                 .or. resn CHSP ) end

set i 1
label DODIH

   if i .le. @nmemb then
      define target sele segid MEMB .and. resid @i end
      coor stat sele target end
      set segid = ?selsegi
      set resid = ?selresi
      set lipid = ?selresn
      goto continue
   endif
   calc j = @i - @nmemb

   label continue

   ! dihedral restraints for double bond cis conformation
   define test sele none end
   define test sele target .and. chem cel1 .and. .not. .bonded. chem cel2 .and. .not. STEROL show end
   calc maxidih = ?nsel / 2
   if ?nsel .gt. 0 then
 
      set idih = 1
      set atom2 = 1
      label idih 
   
         coor stat sele target .and. chem cel1 .and. .not. bynu 1:@atom2 show end
         calc atom1 = ?selatom
         coor stat sele chem cel1 .and. .bonded. bynu @atom1 show end
         calc atom2 = ?selatom
         coor stat sele type C* .and. .bonded. bynu @atom1 .and. .not. bynu @atom2 end
         calc atom0 = ?selatom
         coor stat sele type C* .and. .bonded. bynu @atom2 .and. .not. bynu @atom1 end
         calc atom3 = ?selatom

         ! OpenMM uses atom index, which starts from 0
         calc index0 = @atom0 - 1
         calc index1 = @atom1 - 1
         calc index2 = @atom2 - 1
         calc index3 = @atom3 - 1

         write title unit 55
         * @index0 @index1 @index2 @index3 0.0 0.0
         *
     
      incr idih by 1
      if idih .le. @maxidih goto idih

   endif

   ! dihedral restraints for double bond trans conformation
   define test sele none end
   define test sele target .and. chem cel3 show end
   calc maxidih = ?nsel / 2
   if ?nsel .gt. 0 then

      set idih = 1
      set atom2 = 1
      label transdih

         coor stat sele target .and. chem cel3 .and. .not. bynu 1:@atom2 show end
         calc atom1 = ?selatom
         coor stat sele chem cel3 .and. .bonded. bynu @atom1 show end
         calc atom2 = ?selatom
         coor stat sele type C* .and. .bonded. bynu @atom1 .and. .not. bynu @atom2 end
         calc atom0 = ?selatom
         coor stat sele type C* .and. .bonded. bynu @atom2 .and. .not. bynu @atom1 end
         calc atom3 = ?selatom

         ! OpenMM uses atom index, which starts from 0
         calc index0 = @atom0 - 1
         calc index1 = @atom1 - 1
         calc index2 = @atom2 - 1
         calc index3 = @atom3 - 1

         write title unit 55
         * @index0 @index1 @index2 @index3 180.0 0.0
         *

      incr idih by 1
      if idih .le. @maxidih goto transdih

   endif

   !
   ! c22-c32 trans double bond for ergosterol
   !
   if lipid .eq. ERG then
      coor stat sele target .and. type C20 end
      set atom0 = ?selatom
      coor stat sele target .and. type C22 end
      set atom1 = ?selatom
      coor stat sele target .and. type C23 end
      set atom2 = ?selatom
      coor stat sele target .and. type C24 end
      set atom3 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1

      write title unit 55
      * @index0 @index1 @index2 @index3 180.0 0.0
      *
   endif

   ! dihedral restraints for L-glyceride

   ! cardiolipin
   set iscl = no
   if lipid .eq.  TMCL1 set iscl = yes
   if lipid .eq.  TMCL2 set iscl = yes
   if lipid .eq.  PMCL1 set iscl = yes
   if lipid .eq.  PMCL2 set iscl = yes
   if lipid .eq.  PVCL2 set iscl = yes
   if lipid .eq.  TYCL1 set iscl = yes
   if lipid .eq.  TYCL2 set iscl = yes
   if lipid .eq.  TOCL1 set iscl = yes
   if lipid .eq.  TOCL2 set iscl = yes
   if lipid .eq.  TLCL1 set iscl = yes
   if lipid .eq.  TLCL2 set iscl = yes

   set iscl2 = no
   if lipid .eq. LOACL1 set iscl2 = yes
   if lipid .eq. LOACL2 set iscl2 = yes
   if lipid .eq. LOCCL1 set iscl2 = yes
   if lipid .eq. LOCCL2 set iscl2 = yes
   if lipid .eq. LNCCL1 set iscl2 = yes
   if lipid .eq. LNCCL2 set iscl2 = yes
   if lipid .eq. LNACL1 set iscl2 = yes
   if lipid .eq. LNACL2 set iscl2 = yes
   if lipid .eq. LNDCL1 set iscl2 = yes
   if lipid .eq. LNDCL2 set iscl2 = yes
   if lipid .eq. LNBCL1 set iscl2 = yes
   if lipid .eq. LNBCL2 set iscl2 = yes

   if iscl .eq. ok then
      coor stat sele target .and. type c13 end
      calc atom0 = ?selatom
      coor stat sele target .and. type c11 end
      calc atom1 = ?selatom
      coor stat sele target .and. type c12 end
      calc atom2 = ?selatom
      coor stat sele target .and. type o12 end
      calc atom3 = ?selatom
      coor stat sele target .and. type c33 end
      calc atom4 = ?selatom
      coor stat sele target .and. type c31 end
      calc atom5 = ?selatom
      coor stat sele target .and. type c32 end
      calc atom6 = ?selatom
      coor stat sele target .and. type o32 end
      calc atom7 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1
      calc index4 = @atom4 - 1
      calc index5 = @atom5 - 1
      calc index6 = @atom6 - 1
      calc index7 = @atom7 - 1

      write title unit 55
      * @index0 @index1 @index2 @index3 120.0 2.5
      * @index4 @index5 @index6 @index7 120.0 2.5
      *

      goto skipc2
   endif

   if iscl2 .eq. yes then
      coor stat sele target .and. type c3 end
      calc atom0 = ?selatom
      coor stat sele target .and. type c1 end
      calc atom1 = ?selatom
      coor stat sele target .and. type c2 end
      calc atom2 = ?selatom
      coor stat sele target .and. type og12 end
      calc atom3 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1

      write title unit 55
      * @index0 @index1 @index2 @index3 120.0 2.5
      *

      goto skipc2
   endif

   ! sphingo lipids
   set issph = no
   if lipid .eq.    PSM set issph = yes
   if lipid .eq.    SSM set issph = yes
   if lipid .eq.    ASM set issph = yes
   if lipid .eq.    BSM set issph = yes
   if lipid .eq.   23SM set issph = yes
   if lipid .eq.    LSM set issph = yes
   if lipid .eq.    OSM set issph = yes
   if lipid .eq.    NSM set issph = yes
   if lipid .eq. CER160 set issph = yes
   if lipid .eq. CER180 set issph = yes
   if lipid .eq. CER181 set issph = yes
   if lipid .eq. CER200 set issph = yes
   if lipid .eq. CER220 set issph = yes
   if lipid .eq. CER240 set issph = yes
   if lipid .eq. CER241 set issph = yes
   if lipid .eq.  CER3E set issph = yes
   if lipid .eq.   CER6 set issph = yes
   if lipid .eq.   CER3 set issph = yes
   if lipid .eq.   CER1 set issph = yes

   if issph .eq. yes then
      coor stat sele target .and. type c2s end
      calc atom0 = ?selatom
      coor stat sele target .and. type o3 end
      calc atom1 = ?selatom
      coor stat sele target .and. type c3s end
      calc atom2 = ?selatom
      coor stat sele target .and. type c4s end
      calc atom3 = ?selatom
      coor stat sele target .and. type c3s end
      calc atom4 = ?selatom
      coor stat sele target .and. type c1s end
      calc atom5 = ?selatom
      coor stat sele target .and. type c2s end
      calc atom6 = ?selatom
      coor stat sele target .and. type nf end
      calc atom7 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1
      calc index4 = @atom4 - 1
      calc index5 = @atom5 - 1
      calc index6 = @atom6 - 1
      calc index7 = @atom7 - 1

      write title unit 55
      * @index0 @index1 @index2 @index3 120.0 2.5
      * @index4 @index5 @index6 @index7 120.0 2.5
      *

      goto skipc2
   endif

   define test sele none end
   define test sele target .and. ( type c3 .or. type c1 .or. type c2 .or. type o21 ) end
   if ?nsel .eq. 4 then
      coor stat sele target .and. type c3 end
      calc atom0 = ?selatom
      coor stat sele target .and. type c1 end
      calc atom1 = ?selatom
      coor stat sele target .and. type c2 end
      calc atom2 = ?selatom
      coor stat sele target .and. type o21 end
      calc atom3 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1

      write title unit 55
      * @index0 @index1 @index2 @index3 120.0 2.5
      *
 
   endif

   label skipc2

   ! dihedral restraints for inositol ring chair conformation
   ! dihedral restraints for inositol ring upright

   set ispi = no
   if lipid .eq.   DMPI set ispi = ok
   if lipid .eq. DMPI13 set ispi = ok
   if lipid .eq. DMPI14 set ispi = ok
   if lipid .eq. DMPI15 set ispi = ok
   if lipid .eq. DMPI24 set ispi = ok
   if lipid .eq. DMPI25 set ispi = ok
   if lipid .eq. DMPI2A set ispi = ok
   if lipid .eq. DMPI2B set ispi = ok
   if lipid .eq. DMPI2C set ispi = ok
   if lipid .eq. DMPI2D set ispi = ok
   if lipid .eq. DMPI33 set ispi = ok
   if lipid .eq. DMPI34 set ispi = ok
   if lipid .eq. DMPI35 set ispi = ok
   if lipid .eq.   PYPI set ispi = ok
   if lipid .eq.   POPI set ispi = ok
   if lipid .eq. POPI13 set ispi = ok
   if lipid .eq. POPI14 set ispi = ok
   if lipid .eq. POPI15 set ispi = ok
   if lipid .eq. POPI24 set ispi = ok
   if lipid .eq. POPI25 set ispi = ok
   if lipid .eq. POPI2A set ispi = ok
   if lipid .eq. POPI2B set ispi = ok
   if lipid .eq. POPI2C set ispi = ok
   if lipid .eq. POPI2D set ispi = ok
   if lipid .eq. POPI33 set ispi = ok
   if lipid .eq. POPI34 set ispi = ok
   if lipid .eq. POPI35 set ispi = ok
   if lipid .eq.   PLPI set ispi = ok
   if lipid .eq. PLPI13 set ispi = ok
   if lipid .eq. PLPI14 set ispi = ok
   if lipid .eq. PLPI15 set ispi = ok
   if lipid .eq. PLPI24 set ispi = ok
   if lipid .eq. PLPI25 set ispi = ok
   if lipid .eq. PLPI2A set ispi = ok
   if lipid .eq. PLPI2B set ispi = ok
   if lipid .eq. PLPI2C set ispi = ok
   if lipid .eq. PLPI2D set ispi = ok
   if lipid .eq. PLPI33 set ispi = ok
   if lipid .eq. PLPI34 set ispi = ok
   if lipid .eq. PLPI35 set ispi = ok
   if lipid .eq.   PNPI set ispi = ok
   if lipid .eq. PNPI13 set ispi = ok
   if lipid .eq. PNPI14 set ispi = ok
   if lipid .eq. PNPI15 set ispi = ok
   if lipid .eq. PNPI24 set ispi = ok
   if lipid .eq. PNPI25 set ispi = ok
   if lipid .eq. PNPI2A set ispi = ok
   if lipid .eq. PNPI2B set ispi = ok
   if lipid .eq. PNPI2C set ispi = ok
   if lipid .eq. PNPI2D set ispi = ok
   if lipid .eq. PNPI33 set ispi = ok
   if lipid .eq. PNPI34 set ispi = ok
   if lipid .eq. PNPI35 set ispi = ok
   if lipid .eq.   SAPI set ispi = ok
   if lipid .eq. SAPI13 set ispi = ok
   if lipid .eq. SAPI14 set ispi = ok
   if lipid .eq. SAPI15 set ispi = ok
   if lipid .eq. SAPI24 set ispi = ok
   if lipid .eq. SAPI25 set ispi = ok
   if lipid .eq. SAPI2A set ispi = ok
   if lipid .eq. SAPI2B set ispi = ok
   if lipid .eq. SAPI2C set ispi = ok
   if lipid .eq. SAPI2D set ispi = ok
   if lipid .eq. SAPI33 set ispi = ok
   if lipid .eq. SAPI34 set ispi = ok
   if lipid .eq. SAPI35 set ispi = ok
   if lipid .eq.  DLIPI set ispi = ok

   if ispi .eq. ok then
      coor stat sele target .and. type C11 end
      set atom0 = ?selatom
      coor stat sele target .and. type C12 end
      set atom1 = ?selatom
      coor stat sele target .and. type C13 end
      set atom2 = ?selatom
      coor stat sele target .and. type C14 end
      set atom3 = ?selatom
      coor stat sele target .and. type C15 end
      set atom4 = ?selatom
      coor stat sele target .and. type C16 end
      set atom5 = ?selatom
      coor stat sele target .and. type O12 end
      set atom6 = ?selatom
      coor stat sele target .and. type P end
      set atom7 = ?selatom
      coor stat sele target .and. type O11 end
      set atom8 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1
      calc index4 = @atom4 - 1
      calc index5 = @atom5 - 1
      calc index6 = @atom6 - 1
      calc index7 = @atom7 - 1
      calc index8 = @atom8 - 1

      write title unit 55
      * @index0 @index1 @index2 @index3  60.0 2.5
      * @index1 @index2 @index3 @index4 -60.0 2.5
      * @index2 @index3 @index4 @index5  60.0 2.5
      * @index3 @index4 @index5 @index0 -60.0 2.5
      * @index4 @index5 @index0 @index1  60.0 2.5
      * @index5 @index0 @index1 @index2 -60.0 2.5
      * @index0 @index6 @index7 @index8 180.0 5.0
      *

   endif 

   ! dihedral restraints for detergent carbohydrates ring chair conformation

   set isgl = no
   if lipid .eq.    AOG set isgl = yes
   if lipid .eq.    BOG set isgl = yes
   if lipid .eq.    ANG set isgl = yes
   if lipid .eq.    BNG set isgl = yes
   if lipid .eq.    ADG set isgl = yes
   if lipid .eq.    BDG set isgl = yes
   if lipid .eq.   ADDG set isgl = yes
   if lipid .eq.   BDDG set isgl = yes
   if lipid .eq.  ACY3G set isgl = yes
   if lipid .eq.  BCY3G set isgl = yes
   if lipid .eq.  AMHCG set isgl = yes
   if lipid .eq.  BMHCG set isgl = yes
   if lipid .eq.    AOM set isgl = yes
   if lipid .eq.    BOM set isgl = yes
   if lipid .eq.    ANM set isgl = yes
   if lipid .eq.    BNM set isgl = yes
   if lipid .eq.    ADM set isgl = yes
   if lipid .eq.    BDM set isgl = yes
   if lipid .eq.   AUDM set isgl = yes
   if lipid .eq.   BUDM set isgl = yes
   if lipid .eq.  A2UDM set isgl = yes
   if lipid .eq.  B2UDM set isgl = yes
   if lipid .eq.   ADDM set isgl = yes
   if lipid .eq.   BDDM set isgl = yes
   if lipid .eq.  ADMHM set isgl = yes
   if lipid .eq.  BDMHM set isgl = yes
   if lipid .eq.   APPM set isgl = yes
   if lipid .eq.   BPPM set isgl = yes
   if lipid .eq.    ATM set isgl = yes
   if lipid .eq.    BTM set isgl = yes
   if lipid .eq.  ACY3M set isgl = yes
   if lipid .eq.  BCY3M set isgl = yes
   if lipid .eq.  ACY4M set isgl = yes
   if lipid .eq.  BCY4M set isgl = yes
   if lipid .eq.  ACY5M set isgl = yes
   if lipid .eq.  BCY5M set isgl = yes
   if lipid .eq.  ACY6M set isgl = yes
   if lipid .eq.  BCY6M set isgl = yes
   if lipid .eq.  ACY7M set isgl = yes
   if lipid .eq.  BCY7M set isgl = yes
   if lipid .eq.   SMDD set isgl = yes
   if lipid .eq.  BBPHG set isgl = yes
   if lipid .eq.  BBCYG set isgl = yes
   if lipid .eq.  BOGNG set isgl = yes
   if lipid .eq.  BLMNG set isgl = yes
   if lipid .eq.  BDMNG set isgl = yes
   if lipid .eq.  C5MNG set isgl = yes
   if lipid .eq.  C6MNG set isgl = yes
   if lipid .eq. BOTGNG set isgl = yes
   if lipid .eq.  BOING set isgl = yes
   if lipid .eq.   AHTG set isgl = yes
   if lipid .eq.   BHTG set isgl = yes
   if lipid .eq.   AOTG set isgl = yes
   if lipid .eq.   BOTG set isgl = yes
   if lipid .eq.   AOTM set isgl = yes
   if lipid .eq.   BOTM set isgl = yes
   if lipid .eq.   ANTM set isgl = yes
   if lipid .eq.   BNTM set isgl = yes
   if lipid .eq.   ADTM set isgl = yes
   if lipid .eq.   BDTM set isgl = yes
   if lipid .eq.  AUDTM set isgl = yes
   if lipid .eq.  BUDTM set isgl = yes
   if lipid .eq.  ADDTM set isgl = yes
   if lipid .eq.  BDDTM set isgl = yes

   set isdm = no
   if lipid .eq.    AOM set isdm = yes
   if lipid .eq.    BOM set isdm = yes
   if lipid .eq.    ANM set isdm = yes
   if lipid .eq.    BNM set isdm = yes
   if lipid .eq.    ADM set isdm = yes
   if lipid .eq.    BDM set isdm = yes
   if lipid .eq.   AUDM set isdm = yes
   if lipid .eq.   BUDM set isdm = yes
   if lipid .eq.  A2UDM set isdm = yes
   if lipid .eq.  B2UDM set isdm = yes
   if lipid .eq.   ADDM set isdm = yes
   if lipid .eq.   BDDM set isdm = yes
   if lipid .eq.  ADMHM set isdm = yes
   if lipid .eq.  BDMHM set isdm = yes
   if lipid .eq.   APPM set isdm = yes
   if lipid .eq.   BPPM set isdm = yes
   if lipid .eq.    ATM set isdm = yes
   if lipid .eq.    BTM set isdm = yes
   if lipid .eq.  ACY3M set isdm = yes
   if lipid .eq.  BCY3M set isdm = yes
   if lipid .eq.  ACY4M set isdm = yes
   if lipid .eq.  BCY4M set isdm = yes
   if lipid .eq.  ACY5M set isdm = yes
   if lipid .eq.  BCY5M set isdm = yes
   if lipid .eq.  ACY6M set isdm = yes
   if lipid .eq.  BCY6M set isdm = yes
   if lipid .eq.  ACY7M set isdm = yes
   if lipid .eq.  BCY7M set isdm = yes
   if lipid .eq.   AOTM set isdm = yes
   if lipid .eq.   BOTM set isdm = yes
   if lipid .eq.   ANTM set isdm = yes
   if lipid .eq.   BNTM set isdm = yes
   if lipid .eq.   ADTM set isdm = yes
   if lipid .eq.   BDTM set isdm = yes
   if lipid .eq.  AUDTM set isdm = yes
   if lipid .eq.  BUDTM set isdm = yes
   if lipid .eq.  ADDTM set isdm = yes
   if lipid .eq.  BDDTM set isdm = yes

   set isddm = no
   if lipid .eq.  BLMNG set isddm = yes
   if lipid .eq.  BDMNG set isddm = yes
   if lipid .eq.  C5MNG set isddm = yes
   if lipid .eq.  C6MNG set isddm = yes

   set isddg = no
   if lipid .eq.  BBPHG set isddg = yes
   if lipid .eq.  BBCYG set isddg = yes
   if lipid .eq.  BOGNG set isddg = yes
   if lipid .eq.  BLMNG set isddg = yes
   if lipid .eq.  BDMNG set isddg = yes
   if lipid .eq.  C5MNG set isddg = yes
   if lipid .eq.  C6MNG set isddg = yes
   if lipid .eq. BOTGNG set isddg = yes
   if lipid .eq.  BOING set isddg = yes

   if isgl .eq. yes then
      !
      ! maltoside
      !
      if isdm .eq. yes then
         coor stat sele target .and. type 1O5 end
         set atom0 = ?selatom
         coor stat sele target .and. type 1C1 end
         set atom1 = ?selatom
         coor stat sele target .and. type 1C2 end
         set atom2 = ?selatom
         coor stat sele target .and. type 1C3 end
         set atom3 = ?selatom
         coor stat sele target .and. type 1C4 end
         set atom4 = ?selatom
         coor stat sele target .and. type 1C5 end
         set atom5 = ?selatom

         ! OpenMM uses atom index, which starts from 0
         calc index0 = @atom0 - 1
         calc index1 = @atom1 - 1
         calc index2 = @atom2 - 1
         calc index3 = @atom3 - 1
         calc index4 = @atom4 - 1
         calc index5 = @atom5 - 1

         write title unit 55
         * @index0 @index1 @index2 @index3  60.0 2.5
         * @index1 @index2 @index3 @index4 -60.0 2.5
         * @index2 @index3 @index4 @index5  60.0 2.5
         * @index3 @index4 @index5 @index0 -60.0 2.5
         * @index4 @index5 @index0 @index1  60.0 2.5
         * @index5 @index0 @index1 @index2 -60.0 2.5
         *
      endif

      coor stat sele target .and. type 2O5 end
      set atom0 = ?selatom
      coor stat sele target .and. type 2C1 end
      set atom1 = ?selatom
      coor stat sele target .and. type 2C2 end
      set atom2 = ?selatom
      coor stat sele target .and. type 2C3 end
      set atom3 = ?selatom
      coor stat sele target .and. type 2C4 end
      set atom4 = ?selatom
      coor stat sele target .and. type 2C5 end
      set atom5 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1
      calc index4 = @atom4 - 1
      calc index5 = @atom5 - 1

      write title unit 55
      * @index0 @index1 @index2 @index3  60.0 2.5
      * @index1 @index2 @index3 @index4 -60.0 2.5
      * @index2 @index3 @index4 @index5  60.0 2.5
      * @index3 @index4 @index5 @index0 -60.0 2.5
      * @index4 @index5 @index0 @index1  60.0 2.5
      * @index5 @index0 @index1 @index2 -60.0 2.5
      *

      !
      ! dimaltoside
      !
      if isddm .eq. yes then
         coor stat sele target .and. type 4O5 end
         set atom0 = ?selatom
         coor stat sele target .and. type 4C1 end
         set atom1 = ?selatom
         coor stat sele target .and. type 4C2 end
         set atom2 = ?selatom
         coor stat sele target .and. type 4C3 end
         set atom3 = ?selatom
         coor stat sele target .and. type 4C4 end
         set atom4 = ?selatom
         coor stat sele target .and. type 4C5 end
         set atom5 = ?selatom

         ! OpenMM uses atom index, which starts from 0
         calc index0 = @atom0 - 1
         calc index1 = @atom1 - 1
         calc index2 = @atom2 - 1
         calc index3 = @atom3 - 1
         calc index4 = @atom4 - 1
         calc index5 = @atom5 - 1

         write title unit 55
         * @index0 @index1 @index2 @index3  60.0 2.5
         * @index1 @index2 @index3 @index4 -60.0 2.5
         * @index2 @index3 @index4 @index5  60.0 2.5
         * @index3 @index4 @index5 @index0 -60.0 2.5
         * @index4 @index5 @index0 @index1  60.0 2.5
         * @index5 @index0 @index1 @index2 -60.0 2.5
         *
      endif

      if isddg .eq. yes then
         coor stat sele target .and. type 5O5 end
         set atom0 = ?selatom
         coor stat sele target .and. type 5C1 end
         set atom1 = ?selatom
         coor stat sele target .and. type 5C2 end
         set atom2 = ?selatom
         coor stat sele target .and. type 5C3 end
         set atom3 = ?selatom
         coor stat sele target .and. type 5C4 end
         set atom4 = ?selatom
         coor stat sele target .and. type 5C5 end
         set atom5 = ?selatom

         ! OpenMM uses atom index, which starts from 0
         calc index0 = @atom0 - 1
         calc index1 = @atom1 - 1
         calc index2 = @atom2 - 1
         calc index3 = @atom3 - 1
         calc index4 = @atom4 - 1
         calc index5 = @atom5 - 1

         write title unit 55
         * @index0 @index1 @index2 @index3  60.0 2.5
         * @index1 @index2 @index3 @index4 -60.0 2.5
         * @index2 @index3 @index4 @index5  60.0 2.5
         * @index3 @index4 @index5 @index0 -60.0 2.5
         * @index4 @index5 @index0 @index1  60.0 2.5
         * @index5 @index0 @index1 @index2 -60.0 2.5
         *
      endif

   endif

incr i by 1
if i le @NLipid goto DODIH

prnlev 5

return
